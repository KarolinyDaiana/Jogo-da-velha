{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { StatusBar } from 'expo-status-bar';\nimport { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Home from \"./src/Home\";\nimport Jogo from \"./src/Jogo\";\nimport PalavraForca from \"./src/PalavraForca\";\nimport Forca from \"./src/Forca\";\nimport JogoMemoria from \"./src/JogoMemoria\";\nimport Nomes from \"./src/Nomes\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function App() {\n  var _useState = useState(\"home\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    screen = _useState2[0],\n    setScreen = _useState2[1];\n  var _useState3 = useState(\"\"),\n    _useState4 = _slicedToArray(_useState3, 2),\n    jogador1 = _useState4[0],\n    setJogador1 = _useState4[1];\n  var _useState5 = useState(\"\"),\n    _useState6 = _slicedToArray(_useState5, 2),\n    jogador2 = _useState6[0],\n    setJogador2 = _useState6[1];\n  var _useState7 = useState(\"\"),\n    _useState8 = _slicedToArray(_useState7, 2),\n    palavra = _useState8[0],\n    setPalavra = _useState8[1];\n  var checkScreen = function checkScreen(screenName) {\n    return screenName === screen;\n  };\n  var mudarNomeJogadores = function mudarNomeJogadores(nome1, nome2) {\n    setJogador1(nome1);\n    setJogador2(nome2);\n  };\n  var mudarPalavra = function mudarPalavra(palavra) {\n    if (palavra.lenght() === 0) {\n      alert(\"A palavra não pode estar vazia!\");\n    } else {\n      setPalavra(palavra);\n    }\n  };\n  var changeScreen = function changeScreen(newScreen) {\n    return setScreen(newScreen);\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(StatusBar, {\n      style: \"auto\"\n    }), checkScreen(\"home\") && _jsx(Home, {\n      mudarNomeJogadores: mudarNomeJogadores,\n      changeScreen: changeScreen\n    }), checkScreen(\"jogo\") && _jsx(Jogo, {\n      changeScreen: changeScreen,\n      player1: jogador1,\n      player2: jogador2\n    }), checkScreen(\"PalavraForca\") && _jsx(PalavraForca, {\n      changeScreen: changeScreen,\n      mudarPalavra: mudarPalavra\n    }), checkScreen('Forca') && _jsx(Forca, {\n      changeScreen: changeScreen,\n      palavraForca: palavra\n    }), checkScreen('JogoMemoria') && _jsx(JogoMemoria, {\n      changeScreen: changeScreen,\n      player1: jogador1,\n      player2: jogador2\n    }), checkScreen('Nomes') && _jsx(Nomes, {\n      mudarNomeJogadores: mudarNomeJogadores,\n      changeScreen: changeScreen\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#9effd3',\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});","map":{"version":3,"names":["StatusBar","useState","StyleSheet","View","Home","Jogo","PalavraForca","Forca","JogoMemoria","Nomes","jsx","_jsx","jsxs","_jsxs","App","_useState","_useState2","_slicedToArray","screen","setScreen","_useState3","_useState4","jogador1","setJogador1","_useState5","_useState6","jogador2","setJogador2","_useState7","_useState8","palavra","setPalavra","checkScreen","screenName","mudarNomeJogadores","nome1","nome2","mudarPalavra","lenght","alert","changeScreen","newScreen","style","styles","container","children","player1","player2","palavraForca","create","flex","backgroundColor","alignItems","justifyContent"],"sources":["C:/Users/Karoliny Daiana/OneDrive/Documentos/GitHub/Jogo-da-velha/App.js"],"sourcesContent":["import { StatusBar } from 'expo-status-bar';\r\nimport { useState } from 'react';\r\nimport { StyleSheet, View } from 'react-native';\r\n\r\nimport Home from './src/Home';\r\nimport Jogo from './src/Jogo';\r\nimport PalavraForca from './src/PalavraForca';\r\nimport Forca from './src/Forca';\r\nimport JogoMemoria from './src/JogoMemoria';\r\nimport Nomes from './src/Nomes';\r\n\r\nexport default function App() {\r\n  const [screen, setScreen] = useState(\"home\");\r\n  const [jogador1, setJogador1] = useState(\"\");\r\n  const [jogador2, setJogador2] = useState(\"\");\r\n   \r\n  const [palavra, setPalavra] = useState(\"\");\r\n\r\n  const checkScreen = (screenName) => screenName === screen;\r\n\r\n  const mudarNomeJogadores = (nome1, nome2) => {\r\n    setJogador1(nome1);\r\n    setJogador2(nome2);\r\n  }\r\n\r\n  const mudarPalavra = (palavra) => {\r\n    if(palavra.lenght() === 0) {\r\n      alert(\"A palavra não pode estar vazia!\")\r\n    } else {\r\n      setPalavra(palavra);\r\n    }\r\n  }\r\n\r\n  const changeScreen = (newScreen) => setScreen(newScreen);\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <StatusBar style=\"auto\" />\r\n\r\n      {checkScreen(\"home\") && (\r\n        <Home\r\n          mudarNomeJogadores={mudarNomeJogadores}\r\n          changeScreen={changeScreen}\r\n        />\r\n      )}\r\n\r\n      {checkScreen(\"jogo\") && (\r\n        <Jogo\r\n          changeScreen={changeScreen}\r\n          player1={jogador1}\r\n          player2={jogador2}\r\n        />\r\n      )}\r\n\r\n      {checkScreen(\"PalavraForca\") && (\r\n        <PalavraForca\r\n          changeScreen={changeScreen}\r\n          mudarPalavra={mudarPalavra}\r\n          \r\n        />\r\n      )}\r\n\r\n      {checkScreen('Forca') && (\r\n        <Forca\r\n          changeScreen={changeScreen}\r\n          palavraForca={palavra}\r\n        />\r\n        )}\r\n\r\n      {checkScreen('JogoMemoria') && (\r\n        <JogoMemoria\r\n          changeScreen={changeScreen}\r\n          player1={jogador1}\r\n          player2={jogador2}\r\n        />\r\n      )}\r\n\r\n      {checkScreen('Nomes') && (\r\n        <Nomes\r\n          mudarNomeJogadores={mudarNomeJogadores}\r\n          changeScreen={changeScreen}\r\n        />\r\n      )}\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#9effd3',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n});"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}