{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { useEffect, useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar startValues = [[\"\", \"\", \"\"], [\"\", \"\", \"\"], [\"\", \"\", \"\"]];\nexport default function Jogo(_ref) {\n  var changeScreen = _ref.changeScreen,\n    player1 = _ref.player1,\n    player2 = _ref.player2;\n  var _useState = useState(startValues),\n    _useState2 = _slicedToArray(_useState, 2),\n    states = _useState2[0],\n    setStates = _useState2[1];\n  var _useState3 = useState(\"X\"),\n    _useState4 = _slicedToArray(_useState3, 2),\n    player = _useState4[0],\n    setPlayer = _useState4[1];\n  useEffect(function () {\n    checkWin();\n  }, [states]);\n  var goBack = function goBack() {\n    changeScreen(\"home\");\n  };\n  var checkPlayerWin = function checkPlayerWin(player) {\n    for (var i = 0; i < 3; i++) {\n      if (states[i][0] === player && states[i][1] === player && states[i][2] === player) {\n        return true;\n      }\n    }\n    for (var _i = 0; _i < 3; _i++) {\n      if (states[0][_i] === player && states[1][_i] === player && states[2][_i] === player) {\n        return true;\n      }\n    }\n    if (states[0][0] === player && states[1][1] === player && states[2][2] === player) {\n      return true;\n    }\n    if (states[0][2] === player && states[1][1] === player && states[2][0] === player) {\n      return true;\n    }\n  };\n  var endPlay = function endPlay(message) {\n    alert(message);\n    setStates(startValues);\n    goBack();\n  };\n  var checkWin = function checkWin() {\n    if (checkPlayerWin(\"X\")) {\n      endPlay(`O jogador ${player1} venceu!`);\n    } else if (checkPlayerWin(\"O\")) {\n      endPlay(`O jogador ${player2} venceu!`);\n    } else {\n      var countStates = 0;\n      states.forEach(function (line) {\n        line.forEach(function (column) {\n          if (column === \"X\" || column === \"O\") countStates++;\n        });\n      });\n      if (countStates === 9) {\n        endPlay(\"Ninguém venceu!\");\n      }\n    }\n  };\n  var handleClickPosition = function handleClickPosition(line, column) {\n    if (states[line][column] != \"\") {\n      return;\n    }\n    var newState = [_toConsumableArray(states[0]), _toConsumableArray(states[1]), _toConsumableArray(states[2])];\n    newState[line][column] = player;\n    setStates(newState);\n    setPlayer(player === \"X\" ? \"O\" : \"X\");\n  };\n  var getPlayerName = function getPlayerName() {\n    return player === \"X\" ? player1 : player2;\n  };\n  console.log(\"Olá\");\n  return _jsxs(View, {\n    style: styles.body,\n    children: [_jsxs(Text, {\n      children: [\"\\xC9 a vez do jogador: \", getPlayerName(), \" - \", player]\n    }), states.map(function (line, indexLine) {\n      return _jsx(View, {\n        style: styles.line,\n        children: line.map(function (column, indexColumn) {\n          return _jsx(TouchableOpacity, {\n            onPress: function onPress() {\n              return handleClickPosition(indexLine, indexColumn);\n            },\n            children: _jsx(View, {\n              style: styles.buttonGame,\n              children: _jsx(Text, {\n                style: styles.buttonGameFont,\n                children: column\n              })\n            })\n          }, `${indexLine}${indexColumn}${column}`);\n        })\n      }, indexLine);\n    }), _jsx(Button, {\n      color: \"#09bd9c\",\n      title: \"Voltar\",\n      onPress: goBack\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  body: {\n    backgroundColor: '#9effd3',\n    flex: 1,\n    gap: 10,\n    padding: 70\n  },\n  line: {\n    display: \"flex\",\n    flexDirection: \"row\"\n  },\n  buttonGame: {\n    backgroundColor: '#2bccae',\n    width: 80,\n    height: 80,\n    margin: 2,\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  buttonGameFont: {\n    fontSize: 50,\n    color: \"#125c4e\"\n  }\n});","map":{"version":3,"names":["useEffect","useState","View","Text","Button","StyleSheet","TouchableOpacity","jsxs","_jsxs","jsx","_jsx","startValues","Jogo","_ref","changeScreen","player1","player2","_useState","_useState2","_slicedToArray","states","setStates","_useState3","_useState4","player","setPlayer","checkWin","goBack","checkPlayerWin","i","endPlay","message","alert","countStates","forEach","line","column","handleClickPosition","newState","_toConsumableArray","getPlayerName","console","log","style","styles","body","children","map","indexLine","indexColumn","onPress","buttonGame","buttonGameFont","color","title","create","backgroundColor","flex","gap","padding","display","flexDirection","width","height","margin","justifyContent","alignItems","fontSize"],"sources":["C:/Users/Karoliny Daiana/OneDrive/Documentos/GitHub/Jogo-da-velha/src/Jogo.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport { View, Text, Button, StyleSheet, TouchableOpacity } from \"react-native\";\r\n\r\nconst startValues = [\r\n  [\"\", \"\", \"\"],\r\n  [\"\", \"\", \"\"],\r\n  [\"\", \"\", \"\"]\r\n]\r\n\r\nexport default function Jogo({\r\n  changeScreen,\r\n  player1,\r\n  player2\r\n}) {\r\n  const [states, setStates] = useState(startValues);\r\n  const [player, setPlayer] = useState(\"X\");\r\n\r\n  useEffect(() => {\r\n    checkWin();\r\n  }, [states])\r\n\r\n  const goBack = () => {\r\n    changeScreen(\"home\")\r\n  }\r\n\r\n  const checkPlayerWin = (player) => {\r\n    // check lines\r\n    for (let i = 0; i < 3; i++) {\r\n      if (states[i][0] === player\r\n        && states[i][1] === player\r\n        && states[i][2] === player) {\r\n        return true\r\n      }\r\n    }\r\n    // check columns\r\n    for (let i = 0; i < 3; i++) {\r\n      if (states[0][i] === player\r\n        && states[1][i] === player\r\n        && states[2][i] === player) {\r\n        return true\r\n      }\r\n    }\r\n\r\n    // check others\r\n    if (states[0][0] === player\r\n      && states[1][1] === player\r\n      && states[2][2] === player) {\r\n      return true;\r\n    }\r\n    if (states[0][2] === player\r\n      && states[1][1] === player\r\n      && states[2][0] === player) {\r\n      return true;\r\n    }\r\n  };\r\n\r\n  const endPlay = (message) => {\r\n    alert(message);\r\n    setStates(startValues);\r\n    goBack();\r\n  }\r\n\r\n  const checkWin = () => {\r\n    if (checkPlayerWin(\"X\")) {\r\n      endPlay(`O jogador ${player1} venceu!`);\r\n    } else if (checkPlayerWin(\"O\")) {\r\n      endPlay(`O jogador ${player2} venceu!`);\r\n    } else {\r\n      let countStates = 0;\r\n\r\n      states.forEach(line => {\r\n        line.forEach(column => {\r\n          if (column === \"X\" || column === \"O\") countStates++;\r\n        });\r\n      });\r\n\r\n      if (countStates === 9) {\r\n        endPlay(\"Ninguém venceu!\");\r\n      }\r\n    }\r\n  }\r\n\r\n  const handleClickPosition = (line, column) => {\r\n    if (states[line][column] != \"\") {\r\n      return;\r\n    }\r\n\r\n    const newState = [[...states[0]], [...states[1]], [...states[2]]]\r\n    newState[line][column] = player;\r\n    setStates(newState);\r\n    setPlayer(player === \"X\" ? \"O\" : \"X\");\r\n  }\r\n\r\n  const getPlayerName = () => player === \"X\" ? player1 : player2;\r\n  console.log(\"Olá\")\r\n  return (\r\n    <View style={styles.body}>\r\n\r\n      <Text>\r\n        É a vez do jogador: {getPlayerName()} - {player}\r\n      </Text>\r\n\r\n      {\r\n        states.map((line, indexLine) => {\r\n          return (\r\n            <View style={styles.line} key={indexLine}>\r\n              {line.map((column, indexColumn) => (\r\n                <TouchableOpacity\r\n                  key={`${indexLine}${indexColumn}${column}`}\r\n                  onPress={() => handleClickPosition(indexLine, indexColumn)}\r\n                >\r\n                  <View style={styles.buttonGame}>\r\n                    <Text style={styles.buttonGameFont}>\r\n                      {column}\r\n                    </Text>\r\n                  </View>\r\n                </TouchableOpacity>\r\n              ))}\r\n            </View>\r\n          )\r\n        })\r\n      }\r\n\r\n      <Button \r\n        color='#09bd9c'\r\n        title=\"Voltar\" \r\n        onPress={goBack} \r\n      />\r\n\r\n    </View>\r\n  )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  body: {\r\n    backgroundColor: '#9effd3',\r\n    flex: 1,\r\n    gap: 10,\r\n    padding: 70,\r\n  },\r\n  line: {\r\n    display: \"flex\",\r\n    flexDirection: \"row\"\r\n  },\r\n  buttonGame: {\r\n    backgroundColor: '#2bccae',\r\n    width: 80,\r\n    height: 80,\r\n    margin: 2,\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\"\r\n  },\r\n  buttonGameFont: {\r\n    fontSize: 50,\r\n    color: \"#125c4e\"\r\n  }\r\n});"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}